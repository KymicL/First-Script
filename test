
getgenv().autoClick = false
getgenv().autoRebirth = false
getgenv().autoUpgrade = false
getgenv().autoCollectDaliy = false
getgenv().autoCollectRewards = false
getgenv().autoOpen = false

local remotePath = game:GetService("ReplicatedStorage").IngameStoreBuyProductMax







function autoOpen(shopType)
 spawn(function ()
             while wait() do
             if not getgenv().autoCollectRewards then break end
             local args = {[1] = "TapsReward"}
             game:GetService("ReplicatedStorage").CollectTimedReward:InvokeServer(unpack(args))
             local args = {[1] = "GemsReward"}
              game:GetService("ReplicatedStorage").CollectTimedReward:InvokeServer(unpack(args))
             local args = {[1] = "SRTokenReward"}
              game:GetService("ReplicatedStorage").CollectTimedReward:InvokeServer(unpack(args))
          end
     end)
end











function doclick()
     spawn(function()
          while getgenv().autoClick == true do
              local args = {[1] = false}
              game:GetService("ReplicatedStorage").PlayerClick:FireServer(unpack(args))
              wait()
          end
     end)
end




function autoRebirth(rebirthAmount)
     spawn(function()
          while getgenv().autoRebirth == true do
               local args = {[1] = rebirthAmount}
               game:GetService("ReplicatedStorage").PlayerRebirth:FireServer(unpack(args))
               wait()
          end
     end)
end



function doUpgrades(Upgrades)
     spawn(function()
          while wait() do
          if not getgenv().autoUpgrades == true then break end
               local args = {[1] = "Upgrades",[2] = "UpgradeAutoClick"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UnlockTeleport"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeJump"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UnlockAutoTap"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeSecretPet"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeRebirthValue"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UnlockMultiDelete"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UnlockAutoBuy"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeGemValue"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeSplosionCount"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeRarityIncreaseChance"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeSplosionCD"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeInventory"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeRebirth"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradePetSpeed"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeSpeed"}
               remotePath:InvokeServer(unpack(args))

               local args = {[1] = "Upgrades",[2] = "UpgradeRebirthTaps"}
               remotePath:InvokeServer(unpack(args))
          end
     end)
end









function autoCollectDaily()
     spawn(function()
          while wait() do
          if not getgenv().autoCollectDaliy then break end
               local args = {[1] = "DailyTapBoost"}
              game:GetService("ReplicatedStorage").RepeatableRewards_TimeUntilAvailable:InvokeServer(unpack(args))
          end  
     end)
end




function autoCollectRewards()
     spawn(function ()
               while wait() do
               if not getgenv().autoCollectRewards then break end
               local args = {[1] = "TapsReward"}
               game:GetService("ReplicatedStorage").CollectTimedReward:InvokeServer(unpack(args))
               local args = {[1] = "GemsReward"}
               game:GetService("ReplicatedStorage").CollectTimedReward:InvokeServer(unpack(args))
               local args = {[1] = "SRTokenReward"}
               game:GetService("ReplicatedStorage").CollectTimedReward:InvokeServer(unpack(args))
          end
     end)
end







function autoOpen(shopType)
     spawn(function()
         while wait() do
         if not getgenv().autoOpen == true then break end
               local args = {[1] = "StandardShop",[2] = 1}
               game:GetService("ReplicatedStorage").PetStoreRoll:InvokeServer(unpack(args))
         end
     end)
end





local lib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt")()

local win = lib:Window("Tapper Simulator",Color3.fromRGB(44, 120, 224), Enum.KeyCode.RightControl)

local tab = win:Tab("Farming")

local a = win:a("Rebirths")

local b = win:b("Upgrades")

local c = win:c("Teleports")

local d = win:d("Misc")



tab:Toggle("Auto Click",false, function(t)
     getgenv().autoClick = t
     if t then
      doclick()
     end       
end)


a:Toggle("Auto Rebirth",false, function(t)
    getgenv().autoRebirth = t
     if t then
      autoRebirth()
     end       
end)

b:Toggle("Upgrades",false, function(t)
     getgenv().autoUpgrades = t
      if t then
       doUpgrades()
      end       
 end)



c:Button("Teleport", function()
     
     end)


d:Button("Misc", function()
     
     end)


d:DestroyGui()


d:Slider("Slider",0,100,30, function(t)
print(t)
end)

d:Dropdown("Dropdown",{"Option 1","Option 2","Option 3","Option 4","Option 5"}, function(t)
print(t)
end)

d:Colorpicker("Colorpicker",Color3.fromRGB(255,0,0), function(t)
print(t)
end)

d:Textbox("Textbox",true, function(t)
print(t)
end)

d:Bind("Bind",Enum.KeyCode.RightShift, function()
print("Pressed!")
end)

d:Label("Label")

local changeclr = win:Tab("Change UI Color")

changeclr:Colorpicker("Change UI Color",Color3.fromRGB(44, 120, 224), function(t)
lib:ChangePresetColor(Color3.fromRGB(t.R * 255, t.G * 255, t.B * 255))
end)





